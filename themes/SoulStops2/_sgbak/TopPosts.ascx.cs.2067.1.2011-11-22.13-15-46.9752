using System;
using System.Collections.Generic;
using System.IO;
using BlogEngine.Core;

public partial class themes_Illacrimo_TopPosts : System.Web.UI.UserControl
{
    private readonly string counterPath = System.Web.HttpContext.Current.Server.MapPath(BlogSettings.Instance.StorageLocation) + "counters";
    protected void Page_Load(object sender, EventArgs e)
    {
      Repeater1.DataSource = TopPosts(_top);
      Repeater1.DataBind();
    }

    private int _top;

    public int Top
    {
      get { return _top; }
      set { _top = value; }
    }
    private bool _showViewCount;

    public bool ShowViewCount
    {
      get { return _showViewCount; }
      set { _showViewCount = value; }
    }

    protected List<Counter> TopPosts(int items)
    {
        // Check if it is in the cache already
        List<Counter> shortList;
        try
        {
            shortList = (List<Counter>)Cache["TopPosts"];
        }
        catch
        {
            shortList = null;
        }

        // Do we need to rebuild it?
        if (shortList == null)
        {
            List<Counter> list = new List<Counter>();
            shortList = new List<Counter>();

            // Check for counters folder
            if (Directory.Exists(counterPath))
            {
              // Loop through files and load'em up
              foreach (string countFile in Directory.GetFiles(counterPath))
              {
                using (StreamReader fileRdr = File.OpenText(countFile))
                {
                  string postID = countFile.Substring(countFile.LastIndexOf('\\') + 1);
                  Counter temp = new Counter(postID.Remove(postID.Length - 4), Int32.Parse(fileRdr.ReadLine()));
                  list.Add(temp);
                  fileRdr.Close();
                }
              }

              // Sort'em
              list.Sort(Counter.CompareCount);

              // Get desired number
              if (list.Count < items)
                items = list.Count;

              for (int i = 0; i < items; i++)
              {
                  Counter c = list[i];
                  Post post = Post.GetPost(c.ID);
                  if(DateTime. System.DateTime.Now .DateCreated)
                shortList.Add(list[i]);
              }
            }
            
            // Add to Cache
            Cache.Insert("TopPosts", shortList, null, DateTime.Now.AddMinutes(30), System.Web.Caching.Cache.NoSlidingExpiration);
        }
        return shortList;
    }

    protected string GetPage(object o)
    {
      Counter temp = (Counter)o;
      Post post = Post.GetPost(temp.ID);
      string link = "<a href=\"" + Utils.AbsoluteWebRoot + "post/" + post.Slug + ".aspx\">" + post.Title + "</a>";
      if (_showViewCount || Page.User.Identity.IsAuthenticated)
        link += " (" + temp.Count + ")";
      return link;
    }

}

public class Counter
{
    public Counter(string id, int count)
    {
        _id = new Guid(id);
        _count = count;
    }
    private Guid _id;

    public Guid ID
    {
        get { return _id; }
        set { _id = value; }
    }

    private int _count;

    public int Count
    {
        get { return _count; }
        set { _count = value; }
    }

    public static int CompareCount(Counter x, Counter y)
    {
        // Descending Order!!!
        if (x == null)
        {
            if (y == null)
            {
                // If x is null and y is null, they're equal. 
                return 0;
            }
            else
            {
                // If x is null and y is not null, y is greater. 
                return 1;
            }
        }
        else
        {
            // If x is not null...
            //
            if (y == null)
            // ...and y is null, x is greater.
            {
                return -1;
            }
            else
            {
                // ...and y is not null, we need some additional checks
                if (x.Count > y.Count)
                    return -1;
                else if (x.Count == y.Count)
                    return 0;
                else
                    return 1;

            }
        }
    }
    
}